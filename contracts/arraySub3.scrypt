contract C {
    static const int N = 9;

    public function unlock() {
        require(this.bubble_sort([89, 38, 11, 78, 96, 44, 19, 25, 2, 1]) == [1, 2, 11, 19, 25, 38, 44, 78, 89, 96]);

        require(this.matrix_transpose([
            [1,2,3,4],
            [5,6,7,8],
            [3,2,5,9],
            [4,7,2,3]
        ]) == [
            [1,5,3,4],
            [2,6,2,7],
            [3,7,5,2],
            [4,8,9,3]
        ]);
    }

    function bubble_sort(int[10] a) : int[10] {

        loop (N) : i {
            loop (N) : j {
                if (a[j] > a[j + 1]) {
                    int temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
            }
        }
        return a;
    }

//Matrix transpose
//    1 2 3 4     1 5 3 4
//    5 6 7 8 ->  2 6 2 7
//    3 2 5 9     3 7 5 2
//    4 7 2 3     4 8 9 3
    function matrix_transpose(int[4][4] a) : int[4][4] {

        int[4][4] aa = repeat(repeat(0, 4), 4);
        loop (4) : i {
            loop (4) : j {
                aa[i*1][j*1]=a[j][i];
            }
        }
        return aa;
    }
}
