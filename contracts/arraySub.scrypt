struct ST1 {
	int x;
}

struct ST2 {
	ST1[2] s;
}


struct ST3 {
	ST1[2][2] s;
	bool a;
	bytes b;
}

contract C {
	
	int x;

	ST2[1] st2;

	int[2][2] aa;
	
	// read by index
	public function unlock(int x) {
		require(this.aa[0][0] == 0);
		require(this.aa[x][x] == 0);

		require(this.aa[this.x][this.x] == 3);
        require(this.aa[this.st2[0].s[0].x][this.st2[0].s[1].x] == 1);
        require(this.aa[this.st2[0].s[1].x][this.st2[0].s[0].x] == 2);
		require(true);
	}

	// write by index
	public function unlock2(int x) {
		int[3] a = [0,0,0];

		a[x] = 1;
		x++;
		a[x] = 1;
		x++;
		a[x] = 1;
		require(a == [1,1,1]);

		x = 0;
		this.aa[x][x] = 5;
		x = 1;
		this.aa[x][x] = 8;
		x = 0;
		this.aa[x][this.x] = 2;
		this.aa[this.x][x] = 3;
		
		require(this.aa == [
			[5,2],[3,8]
		]);


		this.st2[x].s[x].x = 11;
		x++;
		this.st2[x].s[x].x = 10;

		require(this.st2 == [{[{11},{10}]}]);

		require(true);
	}


	// write by index
	public function unlock3(int x, ST3[1] st3) {

		st3[x].s[x][x].x = 1;
		st3[x].s[x][this.x].x = 2;
		st3[x].s[this.x][x].x = 3;
		st3[x].s[this.x][this.x].x = 4;

		require(st3[x].s == [[{1}, {2}], [{3}, {4}]]);

		st3[x] = {[[{1}, {1}], [{1}, {1}]], true, b'00'};

		require(st3 == [{[[{1}, {1}], [{1}, {1}]], true, b'00'}]);
		
		require(true);
	}
}